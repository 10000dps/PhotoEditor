{"componentChunkName":"component---node-modules-gatsby-theme-document-src-templates-docs-js","path":"/features/filter-effect","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Filter Effect\",\n  \"description\": \"Introducing filter feature from version 0.2.0\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Introducing filter feature from version 0.2.0. Now you can apply a filter effect on the source image.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://i.imgur.com/xXTGcVC.gif\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"There are two ways you can apply the filter on the source image\"), mdx(\"h2\", {\n    \"id\": \"inbuild-filters\"\n  }, \"Inbuild Filters\"), mdx(\"p\", null, \"By default, this library provides few commonly used filters . The listing of this filters is defined in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PhotoFilter\"), \" enum. You can apply filter image using the following API\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"mPhotoEditor.setFilterEffect(PhotoFilter.BRIGHTNESS);\\n\")), mdx(\"h2\", {\n    \"id\": \"custom-filter\"\n  }, \"Custom Filter\"), mdx(\"p\", null, \"In some cases, you want to have a custom filter in which can easily apply using a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CustomEffect\"), \" builder which requires an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EffecFactory\"), \" name and the value of its parameters\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-java\"\n  }), \"CustomEffect customEffect = new CustomEffect.Builder(EffectFactory.EFFECT_BRIGHTNESS)\\n                .setParameter(\\\"brightness\\\", 0.5f)\\n                .build();\\nmPhotoEditor.setFilterEffect(customEffect);\\n\")), mdx(\"p\", null, \"It will throw a runtime exception if the effect name is empty\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" Check all the available filters on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"EffectFactory\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.android.com/reference/android/media/effect/EffectFactory\"\n  }), \"Documentation\")), mdx(\"h2\", {\n    \"id\": \"limitation\"\n  }, \"Limitation\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Image filter is based upon the MediaEffect support library. So only limited filters are available on EffectFacctory\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Filter feature is designed in a way that filter will apply to the source image, it wont work on the apply effect like paint, sticker, text, and emoji\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#inbuild-filters","title":"Inbuild Filters"},{"url":"#custom-filter","title":"Custom Filter"},{"url":"#limitation","title":"Limitation"}]},"frontmatter":{"title":"Filter Effect","description":"Introducing filter feature from version 0.2.0"}}},"pageContext":{"id":"003133b2-e0ed-5d5a-9759-1f73e51be81d"}},"staticQueryHashes":["2575348879","2936798523","2940813629"]}